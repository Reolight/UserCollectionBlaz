@using Microsoft.AspNetCore.Identity
@using UserCollectionBlaz.Areas.Identity.Data
@using UserCollectionBlaz.ViewModel
@inject UserManager<AppUser> userManager
@inject IHttpContextAccessor httpAccessor
@inject Service.CollectionService collectionService
@inject NavigationManager navigationManager


<div class="bg-gradient bg-opacity-25 bg-secondary container shadow flex-column">
        <h4 class="ps-5">@collection.Name</h4>
        <p>by @collection.Owner</p>
        <div class="btn-group" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-warning" @onclick="() => ToEditCollection(collection.Id)">Edit</button>
            <button type="button" class="btn btn-primary">View</button>
            <button type="button" class="btn btn-danger" @onclick="RemoveCollection">Delete</button>
        </div>
    @foreach(ItemVM item in collection.Items){
        <div class="card d-inline-flex d-sm-inline-flex flex-column mw-100 start-0 w-25">
            <img class="card-img-top" src=@item.ImageSrc alt=@item.Name />
            <div class="card-body">
                <h5 class="card-title">@item.Name</h5>
                <p class="card-text">@item.Description</p>
                @foreach (string field in item.AdditionalFields.Keys){
                    <p class="card-text">@field - @item.AdditionalFields[field]</p>
                }
                <a href="#" class="btn btn-primary">Go somewhere</a>
            </div>
        </div>
    }
    @if (_isOwner)
    {
        <div class="card d-inline-flex d-sm-inline-flex flex-column mw-100 start-0 w-25">
            <img class="card-img-top" alt="Add another item" />
            <div class="card-body">
                <a href="" class="btn btn-primary">Add</a>
        </div>
    </div>
    }
</div>

@code {
    [Parameter] public CollectionVM collection { get; set; }
    [Parameter] public AppUser? CurrentUser { get; set; }
    private bool _isOwner;

    protected override async void OnInitialized() => _isOwner = CurrentUser.UserName == collection.Owner;

    private async void RemoveCollection() 
    { 
        await collectionService.RemoveCollectionAsync(collection); 
        StateHasChanged(); 
    }

    private void ToEditCollection(int id) => navigationManager.NavigateTo("/collection/edit/" + id.ToString());
}