@page "/item/{CollectionId:int}/{Id:int}"
@using UserCollectionBlaz.ViewModel
@using UserCollectionBlaz.Areas.Identity.Data
@inject Service.CollectionService CollectionService
@inject Service.UserService _userService
@inject IHttpContextAccessor _contextAccessor

<body>
@if (itemVm is not null)
{
    <div class="container d-inline-flex flex-column">
        <div class="flex-row">
            <img src=@itemVm.ImageSrc alt=@itemVm.Name class="m-3" style="min-width: 350px;"/>
            
            <div style="min-width: 350px;">
                <h3 class="mt-3 me-5 ms-5">@itemVm.Name</h3>
                <p>@((MarkupString)itemVm.Description)</p>
                @if (itemVm.AdditionalFields.Count > 0)
                        {
                            <div class="container flex-column">
                                @foreach (string key in itemVm.AdditionalFields.Keys)
                                {
                                    @if (CollectionVM.AdditionalFieldsInfo[key] == "bool")
                                    {
                                        <input type="checkbox" @bind="itemVm.AdditionalFields[key]" disabled="disabled"/>
                                        <b>@(key):</b>
                                    }
                                    else
                                    {
                                        <p class="mb-3">
                                            <b>@(key):</b>
                                            @itemVm.AdditionalFields[key]
                                        </p>
                                    }
                                }
                            </div>
                        }
                <div class="flex-row mb-3" style="text-align:right">
                                        @foreach (Tag tag in itemVm.Tags)
                                        {
                                            <TagComponent TagItem="tag" />
                                        }
                                    </div>
                <LikeComponent Location=@($"item-{itemVm.Id}") />
            </div>
        </div>
        
    </div>

    <Comments/>
}
else
{
    <p>There is no such item</p>
}
</body>

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public int CollectionId { get; set; }
    private ItemVM? itemVm;
    private CollectionVM? CollectionVM;
    private UserVM UserViewer;

    protected override async Task OnInitializedAsync()
    {
        UserViewer = await _userService.GetVM(_contextAccessor.HttpContext.User.Identity.Name);
        CollectionVM = await CollectionService.GetCollectionVMAsync(CollectionId, UserViewer.UserName);
        if (CollectionVM is not null)
            itemVm = (from itma in CollectionVM.Items where itma.Id == Id select itma).FirstOrDefault();
    }

}
