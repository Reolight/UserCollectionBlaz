@using UserCollectionBlaz.Areas.Identity.Pages.Account
@using UserCollectionBlaz.ViewModel
@inherits LayoutComponentBase
@inject IHttpContextAccessor HttpAccessor
@inject UserCollectionBlaz.Service.UserService userService
@inject NavigationManager _navigationManager

<PageTitle>UserCollectionBlaz</PageTitle>

<div class="page flex flex-column site-back">

    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container-fluid item-box">
                <a class="navbar-brand" href="#">Navbar</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggler6" aria-controls="" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarToggler6">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link active" href="/">Home</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="account/users">Users</a>
                        </li>

                        <li class="nav-item dropdown">
                            @if (user is not null)
                            {
                                <img src=@user.AvatarSrc width="32" height="32" class="align-middle d-inline-flex flex-row rounded-circle" />
                            }
                            <a class="align-middle d-inline-flex dropdown-toggle active nav-link" id="navbarDropdownMenuLink7" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @if (user is null)
                                {
                                    <p>Account</p>
                                } 
                                else 
                                { 
                                    @user.UserName 
                                }
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink7">
                                @if (user is null){
                                <a class="dropdown-item" href="account/register">Register</a>
                                <a class="dropdown-item" href="account/login">Login</a>
                                }
                                else
                                {
                                <a class="dropdown-item" href=@ProfileUrl>Profile</a>
                                <a class="dropdown-item" href="account/logout">Logout</a>
                                }
                            </div>
                        </li>
                    </ul>

                    <div class="d-flex">
                        <input class="form-control me-2" @bind="_query" placeholder="Search" aria-label="Search" />
                        <button class="btn btn-outline-success" @onclick="SearchFor">Search</button>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code{
    private UserVM? user ;
    private string? ProfileUrl;
    private string _query = "";

    protected override async Task OnInitializedAsync()
    {
        user = await userService.GetVM(HttpAccessor.HttpContext?.User.Identity?.Name);
        if (user is not null ) ProfileUrl = "profile/" + user.UserName;
    }

    private void SearchFor()
    {
        if (!string.IsNullOrWhiteSpace(_query))
            _navigationManager.NavigateTo($"/searching/{_query}");
        _query = "";
    }
}